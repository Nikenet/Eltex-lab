# Makefile.in generated by automake 1.10.1 from Makefile.am.
# gio/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# GLIB - Library of useful C routines




pkgdatadir = $(datadir)/glib
pkglibdir = $(libdir)/glib
pkgincludedir = $(includedir)/glib
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = arm-unknown-linux-gnueabi
DIST_COMMON = $(am__giounixinclude_HEADERS_DIST) $(gioinclude_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/Makefile.decl ChangeLog
am__append_1 = xdgmime
am__append_2 = inotify
am__append_3 = inotify/libinotify.la
am__append_4 = inotify/libinotify.la
#am__append_5 = -DHAVE_FEN
#am__append_6 = fen
#am__append_7 = fen/libfen.la
#am__append_8 = fen/libfen.la
#am__append_9 = win32
#am__append_10 = win32/libgiowin32.la
#am__append_11 = win32/libgiowin32.la
#am__append_12 = fam
am__append_13 = gdesktopappinfo.c gdesktopappinfo.h
am__append_14 = xdgmime/libxdgmime.la
am__append_15 = xdgmime/libxdgmime.la
#am__append_16 = gwin32appinfo.c gwin32appinfo.h
#am__append_17 = -lshlwapi
subdir = gio
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/acglib.m4 \
	$(top_srcdir)/glib/libcharset/codeset.m4 \
	$(top_srcdir)/glib/libcharset/glibc21.m4 \
	$(top_srcdir)/m4macros/glib-gettext.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(gioincludedir)" \
	"$(DESTDIR)$(giounixincludedir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = $(am__append_3) $(am__append_7) $(am__append_10) \
	$(am__append_14) $(am__DEPENDENCIES_1)
am__libgio_2_0_la_SOURCES_DIST = gappinfo.c gasynchelper.c \
	gasynchelper.h gasyncresult.c gbufferedinputstream.c \
	gbufferedoutputstream.c gcancellable.c gcontenttype.c \
	gcontenttypeprivate.h gdatainputstream.c gdataoutputstream.c \
	gdrive.c gdummyfile.h gdummyfile.c gemblem.h gemblem.c \
	gemblemedicon.h gemblemedicon.c gfile.c gfileattribute.c \
	gfileattribute-priv.h gfileenumerator.c gfileicon.c \
	gfileinfo.c gfileinputstream.c gfilemonitor.c \
	gfilenamecompleter.c gfileoutputstream.c gfilterinputstream.c \
	gfilteroutputstream.c gicon.c ginputstream.c gioenums.h \
	gioerror.c giomodule.c giomodule-priv.h gioscheduler.c \
	gloadableicon.c gmount.c gmemoryinputstream.c \
	gmemoryoutputstream.c gmountoperation.c gnativevolumemonitor.c \
	gnativevolumemonitor.h goutputstream.c gpollfilemonitor.c \
	gpollfilemonitor.h gseekable.c gsimpleasyncresult.c \
	gthemedicon.c gunionvolumemonitor.c gunionvolumemonitor.h \
	gvfs.c gvolume.c gvolumemonitor.c gmountprivate.h \
	gioenumtypes.h gioenumtypes.c gioalias.h gioaliasdef.c \
	gdesktopappinfo.c gdesktopappinfo.h gwin32appinfo.c \
	gwin32appinfo.h gunixmount.c gunixmount.h gunixmounts.c \
	gunixmounts.h gunixvolume.c gunixvolume.h gunixvolumemonitor.c \
	gunixvolumemonitor.h gunixinputstream.c gunixoutputstream.c \
	gwin32mount.c gwin32mount.h gwin32volumemonitor.c \
	gwin32volumemonitor.h glocaldirectorymonitor.c \
	glocaldirectorymonitor.h glocalfile.c glocalfile.h \
	glocalfileenumerator.c glocalfileenumerator.h glocalfileinfo.c \
	glocalfileinfo.h glocalfileinputstream.c \
	glocalfileinputstream.h glocalfilemonitor.c \
	glocalfilemonitor.h glocalfileoutputstream.c \
	glocalfileoutputstream.h glocalvfs.c glocalvfs.h gio-marshal.h \
	gio-marshal.c
am__objects_1 = gdesktopappinfo.lo
#am__objects_2 = gwin32appinfo.lo
am__objects_3 = $(am__objects_1) $(am__objects_2)
am__objects_4 =
am__objects_5 = gunixmount.lo gunixmounts.lo \
	gunixvolume.lo gunixvolumemonitor.lo \
	gunixinputstream.lo gunixoutputstream.lo \
	$(am__objects_4)
#am__objects_6 = gwin32mount.lo gwin32volumemonitor.lo \
#	$(am__objects_4)
am__objects_7 = glocaldirectorymonitor.lo glocalfile.lo \
	glocalfileenumerator.lo glocalfileinfo.lo \
	glocalfileinputstream.lo glocalfilemonitor.lo \
	glocalfileoutputstream.lo glocalvfs.lo $(am__objects_4)
am__objects_8 = gio-marshal.lo $(am__objects_4)
am_libgio_2_0_la_OBJECTS = gappinfo.lo gasynchelper.lo gasyncresult.lo \
	gbufferedinputstream.lo gbufferedoutputstream.lo \
	gcancellable.lo gcontenttype.lo gdatainputstream.lo \
	gdataoutputstream.lo gdrive.lo gdummyfile.lo gemblem.lo \
	gemblemedicon.lo gfile.lo gfileattribute.lo gfileenumerator.lo \
	gfileicon.lo gfileinfo.lo gfileinputstream.lo gfilemonitor.lo \
	gfilenamecompleter.lo gfileoutputstream.lo \
	gfilterinputstream.lo gfilteroutputstream.lo gicon.lo \
	ginputstream.lo gioerror.lo giomodule.lo gioscheduler.lo \
	gloadableicon.lo gmount.lo gmemoryinputstream.lo \
	gmemoryoutputstream.lo gmountoperation.lo \
	gnativevolumemonitor.lo goutputstream.lo gpollfilemonitor.lo \
	gseekable.lo gsimpleasyncresult.lo gthemedicon.lo \
	gunionvolumemonitor.lo gvfs.lo gvolume.lo gvolumemonitor.lo \
	gioenumtypes.lo gioaliasdef.lo $(am__objects_3) \
	$(am__objects_5) $(am__objects_6) $(am__objects_7) \
	$(am__objects_8) $(am__objects_4)
libgio_2_0_la_OBJECTS = $(am_libgio_2_0_la_OBJECTS)
libgio_2_0_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libgio_2_0_la_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libgio_2_0_la_SOURCES)
DIST_SOURCES = $(am__libgio_2_0_la_SOURCES_DIST)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
DATA = $(noinst_DATA)
gioincludeHEADERS_INSTALL = $(INSTALL_HEADER)
am__giounixinclude_HEADERS_DIST = gdesktopappinfo.h gunixmounts.h \
	gunixinputstream.h gunixoutputstream.h
giounixincludeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(gioinclude_HEADERS) $(giounixinclude_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = xdgmime inotify fen win32 . fam tests
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /tmp/mc_build/sources/glib-2.17.7/missing --run aclocal-1.10
ALLOCA = 
AMTAR = ${SHELL} /tmp/mc_build/sources/glib-2.17.7/missing --run tar
AR = arm-linux-gnueabi-ar
AS = as
AUTOCONF = ${SHELL} /tmp/mc_build/sources/glib-2.17.7/missing --run autoconf
AUTOHEADER = ${SHELL} /tmp/mc_build/sources/glib-2.17.7/missing --run autoheader
AUTOMAKE = ${SHELL} /tmp/mc_build/sources/glib-2.17.7/missing --run automake-1.10
AWK = mawk
CATALOGS =  am.gmo ar.gmo as.gmo az.gmo be.gmo be@latin.gmo bg.gmo bn.gmo bn_IN.gmo bs.gmo ca.gmo cs.gmo cy.gmo da.gmo de.gmo dz.gmo el.gmo en_CA.gmo en_GB.gmo eo.gmo es.gmo et.gmo eu.gmo fa.gmo fi.gmo fr.gmo ga.gmo gl.gmo gu.gmo he.gmo hi.gmo hr.gmo hu.gmo hy.gmo id.gmo is.gmo it.gmo ja.gmo ka.gmo kn.gmo ko.gmo ku.gmo lt.gmo lv.gmo mg.gmo mk.gmo ml.gmo mn.gmo mr.gmo ms.gmo nb.gmo ne.gmo nl.gmo nn.gmo oc.gmo or.gmo pa.gmo pl.gmo ps.gmo pt.gmo pt_BR.gmo ro.gmo ru.gmo rw.gmo si.gmo sk.gmo sl.gmo sq.gmo sr.gmo sr@Latn.gmo sr@ije.gmo sv.gmo ta.gmo te.gmo th.gmo tl.gmo tr.gmo tt.gmo uk.gmo vi.gmo wa.gmo xh.gmo yi.gmo zh_CN.gmo zh_HK.gmo zh_TW.gmo
CATOBJEXT = .gmo
CC = arm-linux-gnueabi-gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -Wall
CONFIG_STATUS_DEPENDENCIES = $(top_srcdir)/po/LINGUAS
CPP = arm-linux-gnueabi-gcc -E
CPPFLAGS = -P -DG_DISABLE_SINGLE_INCLUDES -pthread
CXX = c++
CXXCPP = c++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DATADIRNAME = share
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DISABLE_MEM_POOLS = 
DLLTOOL = dlltool
DSYMUTIL = 
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
F77 = 
FAM_LIBS = 
FFLAGS = 
GETTEXT_PACKAGE = glib20
GIO = giounix.lo
GIO_MODULE_DIR = ${libdir}/gio/modules
GLIBC21 = yes
GLIB_BINARY_AGE = 1707
GLIB_DEBUG_FLAGS = -DG_ENABLE_DEBUG
GLIB_EXTRA_CFLAGS = 
GLIB_GENMARSHAL = /usr/bin/glib-genmarshal
GLIB_INTERFACE_AGE = 0
GLIB_MAJOR_VERSION = 2
GLIB_MICRO_VERSION = 7
GLIB_MINOR_VERSION = 17
GLIB_VERSION = 2.17.7
GLIB_WIN32_STATIC_COMPILATION_DEFINE = 
GMOFILES =  am.gmo ar.gmo as.gmo az.gmo be.gmo be@latin.gmo bg.gmo bn.gmo bn_IN.gmo bs.gmo ca.gmo cs.gmo cy.gmo da.gmo de.gmo dz.gmo el.gmo en_CA.gmo en_GB.gmo eo.gmo es.gmo et.gmo eu.gmo fa.gmo fi.gmo fr.gmo ga.gmo gl.gmo gu.gmo he.gmo hi.gmo hr.gmo hu.gmo hy.gmo id.gmo is.gmo it.gmo ja.gmo ka.gmo kn.gmo ko.gmo ku.gmo lt.gmo lv.gmo mg.gmo mk.gmo ml.gmo mn.gmo mr.gmo ms.gmo nb.gmo ne.gmo nl.gmo nn.gmo oc.gmo or.gmo pa.gmo pl.gmo ps.gmo pt.gmo pt_BR.gmo ro.gmo ru.gmo rw.gmo si.gmo sk.gmo sl.gmo sq.gmo sr.gmo sr@Latn.gmo sr@ije.gmo sv.gmo ta.gmo te.gmo th.gmo tl.gmo tr.gmo tt.gmo uk.gmo vi.gmo wa.gmo xh.gmo yi.gmo zh_CN.gmo zh_HK.gmo zh_TW.gmo
GMSGFMT = /usr/bin/msgfmt
GREP = /bin/grep
GSPAWN = gspawn.lo
GTHREAD_COMPILE_IMPL_DEFINES = -D_POSIX4_DRAFT_SOURCE -D_POSIX4A_DRAFT10_SOURCE -U_OSF_SOURCE
GTKDOC_CHECK = 
G_LIBS_EXTRA = 
G_MODULE_BROKEN_RTLD_GLOBAL = 0
G_MODULE_HAVE_DLERROR = 1
G_MODULE_IMPL = G_MODULE_IMPL_DL
G_MODULE_LDFLAGS = -Wl,--export-dynamic
G_MODULE_LIBS = -ldl
G_MODULE_LIBS_EXTRA = 
G_MODULE_NEED_USCORE = 0
G_MODULE_PLUGIN_LIBS = 
G_MODULE_SUPPORTED = true
G_THREAD_CFLAGS = -pthread
G_THREAD_LIBS = -pthread 
G_THREAD_LIBS_EXTRA = 
G_THREAD_LIBS_FOR_GTHREAD = -lpthread
HTML_DIR = ${datadir}/gtk-doc/html
ICONV_LIBS = 
INDENT = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INSTOBJEXT = .mo
INTLLIBS = 
LDFLAGS = 
LIBOBJS = 
LIBS =  
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBTOOL_EXPORT_OPTIONS = -export-symbols-regex "^g.*"
LIB_EXE_MACHINE_FLAG = X86
LN_S = ln -s
LTLIBOBJS = 
LT_AGE = 1707
LT_CURRENT = 1707
LT_CURRENT_MINUS_AGE = 0
LT_RELEASE = 2.17
LT_REVISION = 0
MAINT = #
MAKEINFO = ${SHELL} /tmp/mc_build/sources/glib-2.17.7/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
MKINSTALLDIRS = ./mkinstalldirs
MSGFMT = /usr/bin/msgfmt
MSGFMT_OPTS = -c
NM = /usr/bin/arm-linux-gnueabi-nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
PACKAGE = glib
PACKAGE_BUGREPORT = http://bugzilla.gnome.org/enter_bug.cgi?product=glib
PACKAGE_NAME = glib
PACKAGE_STRING = glib 2.17.7
PACKAGE_TARNAME = glib
PACKAGE_VERSION = 2.17.7
PATH_SEPARATOR = :
PCRE_CFLAGS = 
PCRE_LIBS = 
PCRE_REQUIRES = 
PCRE_WARN_CFLAGS =  -Wno-pointer-sign
PERL = perl
PERL_PATH = /usr/bin/perl
PKG_CONFIG = /usr/bin/pkg-config
PLATFORMDEP = 
POFILES =  am.po ar.po as.po az.po be.po be@latin.po bg.po bn.po bn_IN.po bs.po ca.po cs.po cy.po da.po de.po dz.po el.po en_CA.po en_GB.po eo.po es.po et.po eu.po fa.po fi.po fr.po ga.po gl.po gu.po he.po hi.po hr.po hu.po hy.po id.po is.po it.po ja.po ka.po kn.po ko.po ku.po lt.po lv.po mg.po mk.po ml.po mn.po mr.po ms.po nb.po ne.po nl.po nn.po oc.po or.po pa.po pl.po ps.po pt.po pt_BR.po ro.po ru.po rw.po si.po sk.po sl.po sq.po sr.po sr@Latn.po sr@ije.po sv.po ta.po te.po th.po tl.po tr.po tt.po uk.po vi.po wa.po xh.po yi.po zh_CN.po zh_HK.po zh_TW.po
POSUB = po
PO_IN_DATADIR_FALSE = 
PO_IN_DATADIR_TRUE = 
PYTHON = /usr/bin/python
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_PLATFORM = linux2
PYTHON_PREFIX = ${prefix}
PYTHON_VERSION = 2.7
RANLIB = arm-linux-gnueabi-ranlib
REBUILD = 
SED = /bin/sed
SELINUX_LIBS = 
SET_MAKE = 
SHELL = /bin/bash
STRIP = arm-linux-gnueabi-strip
USE_NLS = yes
VERSION = 2.17.7
WINDRES = 
XATTR_LIBS = 
XGETTEXT = /usr/bin/xgettext
XMLCATALOG = 
XML_CATALOG_FILE = 
XSLTPROC = 
abs_builddir = /tmp/mc_build/sources/glib-2.17.7/gio
abs_srcdir = /tmp/mc_build/sources/glib-2.17.7/gio
abs_top_builddir = /tmp/mc_build/sources/glib-2.17.7
abs_top_srcdir = /tmp/mc_build/sources/glib-2.17.7
ac_ct_CC = 
ac_ct_CXX = 
ac_ct_F77 = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = arm-unknown-linux-gnueabi
host_alias = arm-linux-gnueabi
host_cpu = arm
host_os = linux-gnueabi
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /tmp/mc_build/sources/glib-2.17.7/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = /tmp/mc_build/builds/build_glib-2.44.1/share/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
ms_librarian = 
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgpyexecdir = ${pyexecdir}/glib
pkgpythondir = ${pythondir}/glib
prefix = /tmp/mc_build/builds/build_glib-2.44.1
program_transform_name = s,x,x,
psdir = ${docdir}
pyexecdir = ${exec_prefix}/lib/python2.7/site-packages
pythondir = ${prefix}/lib/python2.7/site-packages
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..

#GTESTER = gtester 			# for non-GLIB packages
GTESTER = $(top_builddir)/glib/gtester			# for the GLIB package
GTESTER_REPORT = $(top_builddir)/glib/gtester-report	# for the GLIB package

# initialize variables for unconditional += appending
EXTRA_DIST = gio-marshal.list gio.symbols gioenumtypes.h.template \
	gioenumtypes.c.template makefile.msc makegioalias.pl \
	abicheck.sh pltcheck.sh $(NULL)
TEST_PROGS = 
NULL = 
SUBDIRS = $(am__append_1) $(am__append_2) $(am__append_6) \
	$(am__append_9) . $(am__append_12) tests
##noinst_DATA = gio-2.0.lib
##install_ms_lib_cmd = $(INSTALL) gio-2.0.lib $(DESTDIR)$(libdir)
##uninstall_ms_lib_cmd = -rm $(DESTDIR)$(libdir)/gio-2.0.lib
TESTS = abicheck.sh pltcheck.sh
AM_CPPFLAGS = -DG_LOG_DOMAIN=\"GLib-GIO\" -I$(top_builddir) \
	-I$(top_srcdir) -I$(top_srcdir)/glib -I$(top_srcdir)/gmodule \
	$(GLIB_DEBUG_FLAGS) -DG_DISABLE_DEPRECATED -DGIO_COMPILATION \
	-DGIO_MODULE_DIR=\"$(GIO_MODULE_DIR)\" $(am__append_5)
lib_LTLIBRARIES = libgio-2.0.la
marshal_sources = \
        gio-marshal.h	\
        gio-marshal.c	\
	$(NULL)

#glib_genmarshal = ../gobject/glib-genmarshal
glib_genmarshal = $(GLIB_GENMARSHAL)
local_sources = \
	glocaldirectorymonitor.c 	\
	glocaldirectorymonitor.h 	\
	glocalfile.c 			\
	glocalfile.h 			\
	glocalfileenumerator.c 		\
	glocalfileenumerator.h 		\
	glocalfileinfo.c 		\
	glocalfileinfo.h 		\
	glocalfileinputstream.c 	\
	glocalfileinputstream.h 	\
	glocalfilemonitor.c 		\
	glocalfilemonitor.h 		\
	glocalfileoutputstream.c 	\
	glocalfileoutputstream.h 	\
	glocalvfs.c 			\
	glocalvfs.h 			\
	$(NULL)

platform_libadd = $(am__append_3) $(am__append_7) $(am__append_10) \
	$(am__append_14) $(am__append_17)
platform_deps = $(am__append_4) $(am__append_8) $(am__append_11) \
	$(am__append_15)
appinfo_sources = $(am__append_13) $(am__append_16)
unix_sources = \
	gunixmount.c		\
	gunixmount.h		\
	gunixmounts.c 		\
	gunixmounts.h 		\
	gunixvolume.c 		\
	gunixvolume.h 		\
	gunixvolumemonitor.c 	\
	gunixvolumemonitor.h 	\
	gunixinputstream.c 	\
	gunixoutputstream.c 	\
	$(NULL)

giounixincludedir = $(includedir)/gio-unix-2.0/gio
giounixinclude_HEADERS = \
	gdesktopappinfo.h	\
	gunixmounts.h 		\
	gunixinputstream.h 	\
	gunixoutputstream.h 	\
	$(NULL)

#win32_sources = \
#	gwin32mount.c \
#	gwin32mount.h \
#	gwin32volumemonitor.c \
#	gwin32volumemonitor.h \
#	$(NULL)

libgio_2_0_la_SOURCES = \
	gappinfo.c 		\
	gasynchelper.c 		\
	gasynchelper.h 		\
	gasyncresult.c 		\
	gbufferedinputstream.c 	\
	gbufferedoutputstream.c \
	gcancellable.c 		\
	gcontenttype.c 		\
	gcontenttypeprivate.h 	\
	gdatainputstream.c 	\
	gdataoutputstream.c 	\
	gdrive.c 		\
	gdummyfile.h 		\
	gdummyfile.c 		\
	gemblem.h 		\
	gemblem.c 		\
	gemblemedicon.h		\
	gemblemedicon.c		\
	gfile.c 		\
	gfileattribute.c 	\
	gfileattribute-priv.h 	\
	gfileenumerator.c 	\
	gfileicon.c 		\
	gfileinfo.c 		\
	gfileinputstream.c 	\
	gfilemonitor.c 		\
	gfilenamecompleter.c 	\
	gfileoutputstream.c 	\
	gfilterinputstream.c 	\
	gfilteroutputstream.c 	\
	gicon.c 		\
	ginputstream.c 		\
	gioenums.h		\
	gioerror.c 		\
	giomodule.c 		\
	giomodule-priv.h	\
	gioscheduler.c 		\
	gloadableicon.c 	\
	gmount.c 		\
	gmemoryinputstream.c 	\
	gmemoryoutputstream.c 	\
	gmountoperation.c 	\
	gnativevolumemonitor.c 	\
	gnativevolumemonitor.h 	\
	goutputstream.c 	\
	gpollfilemonitor.c 	\
	gpollfilemonitor.h 	\
	gseekable.c 		\
	gsimpleasyncresult.c 	\
	gthemedicon.c 		\
	gunionvolumemonitor.c 	\
	gunionvolumemonitor.h 	\
	gvfs.c 			\
	gvolume.c 		\
	gvolumemonitor.c 	\
	gmountprivate.h 	\
	gioenumtypes.h		\
	gioenumtypes.c		\
	gioalias.h 		\
	gioaliasdef.c		\
	$(appinfo_sources) 	\
	$(unix_sources) 	\
	$(win32_sources) 	\
	$(local_sources) 	\
	$(marshal_sources) 	\
	$(NULL)

libgio_2_0_la_LIBADD = \
	$(top_builddir)/glib/libglib-2.0.la 		\
	$(top_builddir)/gobject/libgobject-2.0.la 	\
	$(top_builddir)/gmodule/libgmodule-2.0.la 	\
	$(platform_libadd) 				\
	$(SELINUX_LIBS) 				\
	$(GLIB_LIBS) 					\
	$(XATTR_LIBS) 					\
	$(NULL)

#no_undefined = -no-undefined
export_symbols = -export-symbols-regex '^g_.*'
#export_symbols = -export-symbols gio.def
#gio_def = gio.def
libgio_2_0_la_LDFLAGS = \
	-version-info $(LT_CURRENT):$(LT_REVISION):$(LT_AGE) \
	-export-dynamic $(no_undefined) $(export_symbols)

libgio_2_0_la_DEPENDENCIES = $(gio_def) $(platform_deps)
gio_headers = \
	gappinfo.h 		\
	gasyncresult.h 		\
	gbufferedinputstream.h 	\
	gbufferedoutputstream.h \
	gcancellable.h 		\
	gcontenttype.h 		\
	gdatainputstream.h 	\
	gdataoutputstream.h 	\
	gdrive.h 		\
	gemblem.h 		\
	gemblemedicon.h		\
	gfile.h 		\
	gfileattribute.h 	\
	gfileenumerator.h 	\
	gfileicon.h 		\
	gfileinfo.h 		\
	gfileinputstream.h 	\
	gfilemonitor.h 		\
	gfilenamecompleter.h 	\
	gfileoutputstream.h 	\
	gfilterinputstream.h 	\
	gfilteroutputstream.h 	\
	gicon.h 		\
	ginputstream.h 		\
	gio.h			\
	giotypes.h		\
	gioenums.h		\
	gioerror.h 		\
	giomodule.h 		\
	gioscheduler.h 		\
	gloadableicon.h 	\
	gmount.h 		\
	gmemoryinputstream.h 	\
	gmemoryoutputstream.h 	\
	gmountoperation.h 	\
	gnativevolumemonitor.h 	\
	goutputstream.h 	\
	gseekable.h 		\
	gsimpleasyncresult.h 	\
	gthemedicon.h 		\
	gvfs.h 			\
	gvolume.h 		\
	gvolumemonitor.h 	\
	$(NULL)

gioincludedir = $(includedir)/glib-2.0/gio/
gioinclude_HEADERS = \
	$(gio_headers)		\
	gioenumtypes.h


# these sources (also mentioned above) are generated.
BUILT_SOURCES = \
	gio-marshal.h 		\
	gio-marshal.c 		\
	gioalias.h 		\
	gioaliasdef.c		\
	gioenumtypes.h		\
	gioenumtypes.c		\
	$(NULL)

CLEANFILES = \
	$(marshal_sources)	\
	$(NULL)

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am $(top_srcdir)/Makefile.decl $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  gio/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  gio/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libgio-2.0.la: $(libgio_2_0_la_OBJECTS) $(libgio_2_0_la_DEPENDENCIES) 
	$(libgio_2_0_la_LINK) -rpath $(libdir) $(libgio_2_0_la_OBJECTS) $(libgio_2_0_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/gappinfo.Plo
include ./$(DEPDIR)/gasynchelper.Plo
include ./$(DEPDIR)/gasyncresult.Plo
include ./$(DEPDIR)/gbufferedinputstream.Plo
include ./$(DEPDIR)/gbufferedoutputstream.Plo
include ./$(DEPDIR)/gcancellable.Plo
include ./$(DEPDIR)/gcontenttype.Plo
include ./$(DEPDIR)/gdatainputstream.Plo
include ./$(DEPDIR)/gdataoutputstream.Plo
include ./$(DEPDIR)/gdesktopappinfo.Plo
include ./$(DEPDIR)/gdrive.Plo
include ./$(DEPDIR)/gdummyfile.Plo
include ./$(DEPDIR)/gemblem.Plo
include ./$(DEPDIR)/gemblemedicon.Plo
include ./$(DEPDIR)/gfile.Plo
include ./$(DEPDIR)/gfileattribute.Plo
include ./$(DEPDIR)/gfileenumerator.Plo
include ./$(DEPDIR)/gfileicon.Plo
include ./$(DEPDIR)/gfileinfo.Plo
include ./$(DEPDIR)/gfileinputstream.Plo
include ./$(DEPDIR)/gfilemonitor.Plo
include ./$(DEPDIR)/gfilenamecompleter.Plo
include ./$(DEPDIR)/gfileoutputstream.Plo
include ./$(DEPDIR)/gfilterinputstream.Plo
include ./$(DEPDIR)/gfilteroutputstream.Plo
include ./$(DEPDIR)/gicon.Plo
include ./$(DEPDIR)/ginputstream.Plo
include ./$(DEPDIR)/gio-marshal.Plo
include ./$(DEPDIR)/gioaliasdef.Plo
include ./$(DEPDIR)/gioenumtypes.Plo
include ./$(DEPDIR)/gioerror.Plo
include ./$(DEPDIR)/giomodule.Plo
include ./$(DEPDIR)/gioscheduler.Plo
include ./$(DEPDIR)/gloadableicon.Plo
include ./$(DEPDIR)/glocaldirectorymonitor.Plo
include ./$(DEPDIR)/glocalfile.Plo
include ./$(DEPDIR)/glocalfileenumerator.Plo
include ./$(DEPDIR)/glocalfileinfo.Plo
include ./$(DEPDIR)/glocalfileinputstream.Plo
include ./$(DEPDIR)/glocalfilemonitor.Plo
include ./$(DEPDIR)/glocalfileoutputstream.Plo
include ./$(DEPDIR)/glocalvfs.Plo
include ./$(DEPDIR)/gmemoryinputstream.Plo
include ./$(DEPDIR)/gmemoryoutputstream.Plo
include ./$(DEPDIR)/gmount.Plo
include ./$(DEPDIR)/gmountoperation.Plo
include ./$(DEPDIR)/gnativevolumemonitor.Plo
include ./$(DEPDIR)/goutputstream.Plo
include ./$(DEPDIR)/gpollfilemonitor.Plo
include ./$(DEPDIR)/gseekable.Plo
include ./$(DEPDIR)/gsimpleasyncresult.Plo
include ./$(DEPDIR)/gthemedicon.Plo
include ./$(DEPDIR)/gunionvolumemonitor.Plo
include ./$(DEPDIR)/gunixinputstream.Plo
include ./$(DEPDIR)/gunixmount.Plo
include ./$(DEPDIR)/gunixmounts.Plo
include ./$(DEPDIR)/gunixoutputstream.Plo
include ./$(DEPDIR)/gunixvolume.Plo
include ./$(DEPDIR)/gunixvolumemonitor.Plo
include ./$(DEPDIR)/gvfs.Plo
include ./$(DEPDIR)/gvolume.Plo
include ./$(DEPDIR)/gvolumemonitor.Plo
include ./$(DEPDIR)/gwin32appinfo.Plo
include ./$(DEPDIR)/gwin32mount.Plo
include ./$(DEPDIR)/gwin32volumemonitor.Plo

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-gioincludeHEADERS: $(gioinclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(gioincludedir)" || $(MKDIR_P) "$(DESTDIR)$(gioincludedir)"
	@list='$(gioinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(gioincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(gioincludedir)/$$f'"; \
	  $(gioincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(gioincludedir)/$$f"; \
	done

uninstall-gioincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(gioinclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(gioincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(gioincludedir)/$$f"; \
	done
install-giounixincludeHEADERS: $(giounixinclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(giounixincludedir)" || $(MKDIR_P) "$(DESTDIR)$(giounixincludedir)"
	@list='$(giounixinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(giounixincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(giounixincludedir)/$$f'"; \
	  $(giounixincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(giounixincludedir)/$$f"; \
	done

uninstall-giounixincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(giounixinclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(giounixincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(giounixincludedir)/$$f"; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; ws='[	 ]'; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *$$ws$$tst$$ws*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		echo "XPASS: $$tst"; \
	      ;; \
	      *) \
		echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *$$ws$$tst$$ws*) \
		xfail=`expr $$xfail + 1`; \
		echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      echo "SKIP: $$tst"; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    skipped="($$skip tests were not run)"; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS check-local
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(LTLIBRARIES) $(DATA) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(gioincludedir)" "$(DESTDIR)$(giounixincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-recursive

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am: install-data-local install-gioincludeHEADERS \
	install-giounixincludeHEADERS

install-dvi: install-dvi-recursive

install-exec-am: install-libLTLIBRARIES

install-html: install-html-recursive

install-info: install-info-recursive

install-man:

install-pdf: install-pdf-recursive

install-ps: install-ps-recursive

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-gioincludeHEADERS \
	uninstall-giounixincludeHEADERS uninstall-libLTLIBRARIES \
	uninstall-local

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) install-am \
	install-strip

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-TESTS check-am check-local clean \
	clean-generic clean-libLTLIBRARIES clean-libtool ctags \
	ctags-recursive distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-data-local install-dvi install-dvi-am \
	install-exec install-exec-am install-gioincludeHEADERS \
	install-giounixincludeHEADERS install-html install-html-am \
	install-info install-info-am install-libLTLIBRARIES \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am \
	uninstall-gioincludeHEADERS uninstall-giounixincludeHEADERS \
	uninstall-libLTLIBRARIES uninstall-local


### testing rules

# test: run all tests in cwd and subdirs
test:	${TEST_PROGS}
	@test -z "${TEST_PROGS}" || ${GTESTER} --verbose ${TEST_PROGS}
	@ for subdir in $(SUBDIRS) . ; do \
	    test "$$subdir" = "." -o "$$subdir" = "po" || \
	    ( cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $@ ) || exit $? ; \
	  done
# test-report: run tests in subdirs and generate report
# perf-report: run tests in subdirs with -m perf and generate report
# full-report: like test-report: with -m perf and -m slow
test-report perf-report full-report:	${TEST_PROGS}
	@test -z "${TEST_PROGS}" || { \
	  case $@ in \
	  test-report) test_options="-k";; \
	  perf-report) test_options="-k -m=perf";; \
	  full-report) test_options="-k -m=perf -m=slow";; \
	  esac ; \
	  if test -z "$$GTESTER_LOGDIR" ; then	\
	    ${GTESTER} --verbose $$test_options -o test-report.xml ${TEST_PROGS} ; \
	  elif test -n "${TEST_PROGS}" ; then \
	    ${GTESTER} --verbose $$test_options -o `mktemp "$$GTESTER_LOGDIR/log-XXXXXX"` ${TEST_PROGS} ; \
	  fi ; \
	}
	@ ignore_logdir=true ; \
	  if test -z "$$GTESTER_LOGDIR" ; then \
	    GTESTER_LOGDIR=`mktemp -d "\`pwd\`/.testlogs-XXXXXX"`; export GTESTER_LOGDIR ; \
	    ignore_logdir=false ; \
	  fi ; \
	  for subdir in $(SUBDIRS) . ; do \
	    test "$$subdir" = "." -o "$$subdir" = "po" || \
	    ( cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $@ ) || exit $? ; \
	  done ; \
	  $$ignore_logdir || { \
	    echo '<?xml version="1.0"?>' > $@.xml ; \
	    echo '<report-collection>'  >> $@.xml ; \
	    for lf in `ls -L "$$GTESTER_LOGDIR"/.` ; do \
	      sed '1,1s/^<?xml\b[^>?]*?>//' <"$$GTESTER_LOGDIR"/"$$lf" >> $@.xml ; \
	    done ; \
	    echo >> $@.xml ; \
	    echo '</report-collection>' >> $@.xml ; \
	    rm -rf "$$GTESTER_LOGDIR"/ ; \
	    ${GTESTER_REPORT} --version 2>/dev/null 1>&2 ; test "$$?" != 0 || ${GTESTER_REPORT} $@.xml >$@.html ; \
	  }
.PHONY: test test-report perf-report full-report
# run make test as part of make check
check-local: test

install-ms-lib:
	$(install_ms_lib_cmd)

uninstall-ms-lib:
	$(uninstall_ms_lib_cmd)

gio.def: gio.symbols
	(echo -e EXPORTS; $(CPP) -P -DINCLUDE_VARIABLES -DINCLUDE_INTERNAL_SYMBOLS -DG_OS_WIN32 -DALL_FILES - <$(srcdir)/gio.symbols | sed -e '/^$$/d' -e 's/^/	/' -e 's/G_GNUC_[^ ]*//g' | sort) > gio.def.tmp && \
	  mv gio.def.tmp gio.def

gioalias.h: gio.symbols
	$(PERL) $(srcdir)/makegioalias.pl < $(srcdir)/gio.symbols > gioalias.h.tmp && \
	  mv gioalias.h.tmp gioalias.h

gioaliasdef.c: gio.symbols
	$(PERL) $(srcdir)/makegioalias.pl -def < $(srcdir)/gio.symbols > gioaliasdef.c.tmp && \
	  mv gioaliasdef.c.tmp gioaliasdef.c

gio-marshal.h: gio-marshal.list
	$(glib_genmarshal) --prefix=_gio_marshal $(srcdir)/gio-marshal.list --header --internal > $@.tmp && \
	  mv $@.tmp $@

gio-marshal.c: gio-marshal.h gio-marshal.list
	(echo "#include \"gio-marshal.h\""; \
	$(glib_genmarshal) --prefix=_gio_marshal $(srcdir)/gio-marshal.list --body --internal) > $@.tmp && \
	  mv $@.tmp $@

$(libgio_2_0_la_OBJECTS): $(marshal_sources)

#install-def-file:
#	$(INSTALL) gio.def $(DESTDIR)$(libdir)/gio-2.0.def

#uninstall-def-file:
#	-rm $(DESTDIR)$(libdir)/gio-2.0.def
install-def-file:
uninstall-def-file:

install-data-local: install-ms-lib install-def-file

uninstall-local: uninstall-ms-lib uninstall-def-file

gioenumtypes.h: $(gio_headers) gioenumtypes.h.template
	( top_builddir=`cd $(top_builddir) && pwd`; \
	  cd $(srcdir) && $$top_builddir/gobject/glib-mkenums --template gioenumtypes.h.template $(gio_headers) ) > \
	    gioenumtypes.h.tmp && mv gioenumtypes.h.tmp gioenumtypes.h

gioenumtypes.c: $(gio_headers) gioenumtypes.c.template
	( top_builddir=`cd $(top_builddir) && pwd`; \
	  cd $(srcdir) && $$top_builddir/gobject/glib-mkenums --template gioenumtypes.c.template $(gio_headers) ) > \
	    gioenumtypes.c.tmp && mv gioenumtypes.c.tmp gioenumtypes.c

gio-2.0.lib: libgio-2.0.la gio.def
	lib -machine:X86 -name:libgio-2.0-$(LT_CURRENT_MINUS_AGE).dll -def:gio.def -out:$@
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
